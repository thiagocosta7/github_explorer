{"version":3,"sources":["styles/global.ts","services/api-client.ts","components/Loader/styles.ts","components/Loader/index.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","pages/User/styles.ts","pages/User/index.tsx","routes/index.tsx","components/Header/styles.ts","components/Header/index.tsx","App.tsx","index.tsx","assets/github_bg.svg","assets/logo.svg"],"names":["createGlobalStyle","githubBg","api","axios","create","baseURL","LoaderContainer","styled","div","Loader","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","height","width","Title","h1","Form","form","hasError","css","shade","Repositories","Error","span","Dashboard","useState","searchType","setSearchType","searchTerm","setSearchTerm","loading","error","status","setStatus","results","setResults","event","a","preventDefault","get","response","result","data","items","onSubmit","type","value","id","name","checked","onChange","e","target","placeholder","toLocaleLowerCase","map","to","login","key","src","avatar_url","alt","size","full_name","owner","description","RepositoryInfo","section","Issues","Repository","params","useRouteMatch","repository","setRepository","issues","setIssues","useEffect","then","stargazers_count","forks_count","open_issues_count","issue","href","html_url","rel","title","user","User","setUser","repositories","setRepositories","location","followers","following","public_repos","Routes","path","exact","component","Header","header","HeaderComponent","pathname","useLocation","logo","App","basename","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c0f7479f.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nimport githubBg from './../assets/github_bg.svg'\n\nexport default createGlobalStyle`\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toutline: none;\n\t\tbox-sizing: border-box;\n\t}\n\n\tbody {\n\t\tbackground: #F0F0F5 url(${githubBg}) no-repeat 70% top;\n\t\t-webkit-font-smoothing: antialiased;\n\t}\n\n\tbody,\n\tinput,\n\tbutton {\n\t\tfont: 16px Roboto, sans-serif;\n\t}\n\n\t#root {\n\t\tmax-width: 960px;\n\t\tmargin: 0 auto;\n\t\tpadding: 40px 20px;\n\t}\n\n\tbutton {\n\t\tcursor: pointer;\n\t}\n`\n","import axios from 'axios'\n\nconst api = axios.create({\n\tbaseURL: 'https://api.github.com'\n})\n\nexport default api\n","import styled from 'styled-components'\n\nexport const LoaderContainer = styled.div`\n\tposition: fixed;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground: rgba(255, 255, 255, 0.2);\n`\n","import React from 'react'\nimport Lottie from 'react-lottie'\n\nimport { LoaderContainer } from './styles'\n\nimport animationData from './loaderLottie.json'\n\nconst Loader: React.FC = () => {\n\tconst defaultOptions = {\n\t\tloop: true,\n\t\tautoplay: true,\n\t\tanimationData: animationData,\n\t\trendererSettings: {\n\t\t\tpreserveAspectRatio: 'xMidYMid slice'\n\t\t}\n\t}\n\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<Lottie options={defaultOptions} height={200} width={200} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n","import styled, { css } from 'styled-components'\nimport { shade } from 'polished'\n\ninterface FormProps {\n\thasError: boolean\n}\n\nexport const Title = styled.h1`\n\tmargin-top: 40px;\n\tfont-size: 36px;\n\tline-height: 44px;\n\tcolor: #3a3a3a;\n`\n\nexport const Form = styled.form<FormProps>`\n\tmargin-top: 40px;\n\tmax-width: 700px;\n\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\n\t& > div {\n\t\tflex-basis: 100%;\n\t\tborder: none;\n\t\tdisplay: flex;\n\n\t\tlabel {\n\t\t\tdisplay: block;\n\t\t\tposition: relative;\n\t\t\tpadding-left: 35px;\n\t\t\tmargin-bottom: 12px;\n\t\t\tcursor: pointer;\n\t\t\tfont-size: 22px;\n\t\t\t-webkit-user-select: none;\n\t\t\t-moz-user-select: none;\n\t\t\t-ms-user-select: none;\n\t\t\tuser-select: none;\n\t\t\tcolor: #3a3a3a;\n\n\t\t\t& + label {\n\t\t\t\tmargin-left: 16px;\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tinput {\n\t\t\t\t\t& ~ span {\n\t\t\t\t\t\tbackground-color: #e1e1e1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tinput {\n\t\t\t\tposition: absolute;\n\t\t\t\topacity: 0;\n\t\t\t\tcursor: pointer;\n\t\t\t\theight: 0;\n\t\t\t\twidth: 0;\n\t\t\t}\n\n\t\t\tinput:checked {\n\t\t\t\t& ~ span {\n\t\t\t\t\tbackground-color: #2196f3;\n\t\t\t\t\t&:after {\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t\tleft: 0;\n\t\t\t\theight: 25px;\n\t\t\t\twidth: 25px;\n\t\t\t\tbackground-color: #ffffff;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\ttransition: 0.2s background-color;\n\t\t\t\t&:after {\n\t\t\t\t\tcontent: '';\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\tdisplay: none;\n\t\t\t\t\ttop: 9px;\n\t\t\t\t\tleft: 9px;\n\t\t\t\t\twidth: 8px;\n\t\t\t\t\theight: 8px;\n\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\tbackground: white;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t& > input {\n\t\tflex: 1;\n\t\theight: 50px;\n\t\tpadding: 0 16px;\n\t\tborder: 2px solid transparent;\n\t\tborder-right: 0;\n\t\tborder-radius: 5px 0 0 5px;\n\t\tcolor: #3a3a3a;\n\n\t\t${({ hasError }) =>\n\t\t\thasError &&\n\t\t\tcss`\n\t\t\t\tborder-color: #c53030;\n\t\t\t`}\n\n\t\t&::placeholder {\n\t\t\tcolor: #a8a8b3;\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\theight: 70px;\n\t\t\tpadding: 0 24px;\n\t\t}\n\t}\n\n\tbutton {\n\t\tflex: 1;\n\t\tbackground: #2196f3;\n\t\tborder: 0;\n\t\theight: 50px;\n\t\tcolor: #ffffff;\n\t\tfont-weight: bold;\n\t\tborder-radius: 0 5px 5px 0;\n\t\ttransition: 0.2s background-color;\n\t\t&:hover {\n\t\t\tbackground: ${shade(0.2, '#2196f3')};\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\theight: 70px;\n\t\t\tflex: none;\n\t\t\twidth: 210px;\n\t\t}\n\t}\n`\nexport const Repositories = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\t/* Repository item */\n\ta {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t\tflex-direction: column;\n\t\ttext-decoration: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: 0.2s transform;\n\n\t\t& + a {\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\t\t&:hover {\n\t\t\ttransform: translateX(10px);\n\t\t}\n\n\t\timg {\n\t\t\twidth: 64px;\n\t\t\theight: 64px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-bottom: 16px;\n\t\t}\n\n\t\tdiv {\n\t\t\tmargin: 0 16px;\n\t\t\tflex: 1;\n\n\t\t\tstrong {\n\t\t\t\tfont-size: 20px;\n\t\t\t\tcolor: #3d3d4d;\n\n\t\t\t\tspan {\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tfont-weight: normal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #a8a8b3;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\t\t}\n\n\t\tsvg {\n\t\t\tmargin: 16px 0 0 0;\n\t\t\tcolor: #cbcbd6;\n\t\t}\n\t}\n\n\t@media (min-width: 1024px) {\n\t\ta {\n\t\t\tflex-direction: row;\n\n\t\t\timg {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\tsvg {\n\t\t\t\tmargin: 0 0 0 auto;\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const Error = styled.span`\n\tdisplay: block;\n\tcolor: #c53030;\n\tmargin-top: 8px;\n`\n","import React, { useState, FormEvent } from 'react'\nimport { FiChevronRight } from 'react-icons/fi'\nimport { Link } from 'react-router-dom'\n\nimport api from './../../services/api-client'\n\nimport Loader from './../../components/Loader'\n\nimport { Title, Form, Error, Repositories } from './styles'\n\ninterface SearchResult {\n\tid: number\n\ttype?: string\n\tname?: string\n\tfull_name?: string\n\tdescription?: string\n\tlogin?: string\n\tavatar_url?: string\n\towner: {\n\t\tavatar_url?: string\n\t\tlogin?: string\n\t}\n}\n\nconst Dashboard: React.FC = () => {\n\tconst [searchType, setSearchType] = useState('repositories')\n\tconst [searchTerm, setSearchTerm] = useState('')\n\tconst [status, setStatus] = useState({\n\t\tloading: false,\n\t\terror: ''\n\t})\n\tconst [results, setResults] = useState<SearchResult[]>([])\n\n\tasync function handleAddRepository(\n\t\tevent: FormEvent<HTMLFormElement>\n\t): Promise<void> {\n\t\tevent.preventDefault()\n\n\t\tif (!searchTerm) {\n\t\t\tsetStatus({\n\t\t\t\t...status,\n\t\t\t\terror: `You must type a ${\n\t\t\t\t\tsearchType === 'repositories' ? 'repository' : 'user'\n\t\t\t\t} name to search`\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tsetStatus({ ...status, loading: true })\n\n\t\ttry {\n\t\t\tconst response = await api.get(`search/${searchType}?q=${searchTerm}`)\n\t\t\tconst result = response.data.items\n\n\t\t\tsetResults(result)\n\t\t\tsetSearchTerm('')\n\t\t\tsetStatus({ loading: false, error: '' })\n\t\t} catch (error) {\n\t\t\tsetStatus({\n\t\t\t\tloading: true,\n\t\t\t\terror: `Error while searching for: ${searchTerm}`\n\t\t\t})\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Title> Explore repositories or users on GitHub: </Title>\n\n\t\t\t<Form hasError={!!status.error} onSubmit={handleAddRepository}>\n\t\t\t\t<div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tRepositories\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tvalue=\"repositories\"\n\t\t\t\t\t\t\tid=\"repositories\"\n\t\t\t\t\t\t\tname=\"searchType\"\n\t\t\t\t\t\t\tchecked={searchType === 'repositories'}\n\t\t\t\t\t\t\tonChange={e => setSearchType(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tUsers\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\t\t\tvalue=\"users\"\n\t\t\t\t\t\t\tid=\"users\"\n\t\t\t\t\t\t\tname=\"searchType\"\n\t\t\t\t\t\t\tchecked={searchType === 'users'}\n\t\t\t\t\t\t\tonChange={e => setSearchType(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span></span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\tvalue={searchTerm}\n\t\t\t\t\tplaceholder={`Search for ${searchType.toLocaleLowerCase()}...`}\n\t\t\t\t\tonChange={e => setSearchTerm(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\"> Search </button>\n\t\t\t</Form>\n\n\t\t\t{status.error && <Error> {status.error} </Error>}\n\n\t\t\t<Repositories>\n\t\t\t\t{status.loading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : (\n\t\t\t\t\tresults.map(result => {\n\t\t\t\t\t\tif (result.type === 'User') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link to={`/users/${result.login}`} key={result.id}>\n\t\t\t\t\t\t\t\t\t<img src={result.avatar_url} alt={result.login} />\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<strong> {result.login} </strong>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link to={`/repositories/${result.full_name}`} key={result.id}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t{result.name} <span> [{result.owner.login}] </span>\n\t\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t\t\t<p> {result.description} </p>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</Repositories>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import styled from 'styled-components'\n\nexport const RepositoryInfo = styled.section`\n\tmargin-top: 80px;\n\n\theader {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\n\t\timg {\n\t\t\twidth: 80px;\n\t\t\theight: 80px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-bottom: 16px;\n\t\t}\n\n\t\tdiv {\n\t\t\tflex: 1;\n\t\t\tstrong {\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #737380;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tflex-direction: row;\n\n\t\t\timg {\n\t\t\t\twidth: 120px;\n\t\t\t\theight: 120px;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\tdiv {\n\t\t\t\tmargin-left: 24px;\n\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tfont-size: 28px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tul {\n\t\tdisplay: flex;\n\t\tlist-style: none;\n\t\tmargin-top: 40px;\n\n\t\tli {\n\t\t\t& + li {\n\t\t\t\tmargin-left: 26px;\n\t\t\t}\n\t\t\tstrong {\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-top: 4px;\n\t\t\t\tcolor: #6c6c80;\n\t\t\t}\n\t\t}\n\t\t@media (min-width: 1024px) {\n\t\t\tli {\n\t\t\t\t& + li {\n\t\t\t\t\tmargin-left: 80px;\n\t\t\t\t}\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const Issues = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\t/* Repository item */\n\ta {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 16px;\n\t\tdisplay: block;\n\t\ttext-decoration: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: 0.2s transform;\n\n\t\t& + a {\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\t\t&:hover {\n\t\t\ttransform: translateX(10px);\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tpadding: 24px;\n\t\t}\n\t}\n\n\tdiv {\n\t\tmargin: 0 8px;\n\t\tflex: 1;\n\n\t\tstrong {\n\t\t\tfont-size: 18px;\n\t\t\tcolor: #3d3d4d;\n\t\t}\n\n\t\tp {\n\t\t\tfont-size: 16px;\n\t\t\tcolor: #a8a8b3;\n\t\t\tmargin-top: 4px;\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tmargin: 0 16px;\n\n\t\t\tstrong {\n\t\t\t\tfont-size: 20px;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t}\n\t}\n\n\tsvg {\n\t\tmargin-left: auto;\n\t\tcolor: #cbcbd6;\n\t}\n`\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { FiChevronRight } from 'react-icons/fi'\n\nimport api from './../../services/api-client'\n\nimport { RepositoryInfo, Issues } from './styles'\n\nimport Loader from './../../components/Loader'\n\ninterface RepositoryParams {\n\trepository: string\n}\n\ninterface Repository {\n\tfull_name: string\n\tdescription: string\n\tstargazers_count: number\n\tforks_count: number\n\topen_issues_count: number\n\towner: {\n\t\tlogin: string\n\t\tavatar_url: string\n\t}\n}\n\ninterface Issue {\n\tid: number\n\ttitle: string\n\thtml_url: string\n\tuser: {\n\t\tlogin: string\n\t}\n}\n\nconst Repository: React.FC = () => {\n\tconst { params } = useRouteMatch<RepositoryParams>()\n\n\tconst [repository, setRepository] = useState<Repository | null>(null)\n\tconst [issues, setIssues] = useState<Issue[]>([])\n\n\tuseEffect(() => {\n\t\tapi.get(`repos/${params.repository}`).then(response => {\n\t\t\tsetRepository(response.data)\n\t\t})\n\t\tapi.get(`repos/${params.repository}/issues`).then(response => {\n\t\t\tsetIssues(response.data)\n\t\t})\n\t}, [params.repository])\n\n\treturn repository && issues ? (\n\t\t<>\n\t\t\t<RepositoryInfo>\n\t\t\t\t<header>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\talt={repository.owner.avatar_url}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.stargazers_count} </strong>\n\t\t\t\t\t\t<span> stars </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.forks_count} </strong>\n\t\t\t\t\t\t<span> forks </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.open_issues_count} </strong>\n\t\t\t\t\t\t<span> open issues </span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</RepositoryInfo>\n\t\t\t<Issues>\n\t\t\t\t{issues.map(issue => (\n\t\t\t\t\t<a\n\t\t\t\t\t\tkey={issue.id}\n\t\t\t\t\t\thref={issue.html_url}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {issue.title} </strong>\n\t\t\t\t\t\t\t<p> {issue.user.login} </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</a>\n\t\t\t\t))}\n\t\t\t</Issues>\n\t\t</>\n\t) : (\n\t\t<Loader />\n\t)\n}\n\nexport default Repository\n","import styled from 'styled-components'\n\nexport const RepositoryInfo = styled.section`\n\tmargin-top: 80px;\n\n\theader {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\n\t\timg {\n\t\t\twidth: 80px;\n\t\t\theight: 80px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-bottom: 16px;\n\t\t}\n\n\t\tdiv {\n\t\t\tflex: 1;\n\t\t\tstrong {\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #737380;\n\t\t\t\tmargin-top: 4px;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tflex-direction: row;\n\n\t\t\timg {\n\t\t\t\twidth: 120px;\n\t\t\t\theight: 120px;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\tdiv {\n\t\t\t\tmargin-left: 24px;\n\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tfont-size: 28px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tul {\n\t\tdisplay: flex;\n\t\tlist-style: none;\n\t\tmargin-top: 40px;\n\n\t\tli {\n\t\t\t& + li {\n\t\t\t\tmargin-left: 26px;\n\t\t\t}\n\t\t\tstrong {\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-top: 4px;\n\t\t\t\tcolor: #6c6c80;\n\t\t\t}\n\t\t}\n\t\t@media (min-width: 1024px) {\n\t\t\tli {\n\t\t\t\t& + li {\n\t\t\t\t\tmargin-left: 80px;\n\t\t\t\t}\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const Issues = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\t/* Repository item */\n\ta {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 16px;\n\t\tdisplay: block;\n\t\ttext-decoration: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: 0.2s transform;\n\n\t\t& + a {\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\t\t&:hover {\n\t\t\ttransform: translateX(10px);\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tpadding: 24px;\n\t\t}\n\t}\n\n\tdiv {\n\t\tmargin: 0 8px;\n\t\tflex: 1;\n\n\t\tstrong {\n\t\t\tfont-size: 18px;\n\t\t\tcolor: #3d3d4d;\n\t\t}\n\n\t\tp {\n\t\t\tfont-size: 16px;\n\t\t\tcolor: #a8a8b3;\n\t\t\tmargin-top: 4px;\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tmargin: 0 16px;\n\n\t\t\tstrong {\n\t\t\t\tfont-size: 20px;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t}\n\t}\n\n\tsvg {\n\t\tmargin-left: auto;\n\t\tcolor: #cbcbd6;\n\t}\n`\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { FiChevronRight } from 'react-icons/fi'\n\nimport api from './../../services/api-client'\n\nimport { RepositoryInfo, Issues } from './styles'\n\nimport Loader from './../../components/Loader'\n\ninterface UserParams {\n\tuser: string\n}\n\ninterface User {\n\tname: string\n\tlogin: string\n\tavatar_url: string\n\tlocation: string\n\tpublic_repos: number\n\tfollowers: number\n\tfollowing: number\n}\n\ninterface Repository {\n\tid: number\n\tname: string\n\tdescription: string\n\thtml_url: string\n}\n\nconst User: React.FC = () => {\n\tconst { params } = useRouteMatch<UserParams>()\n\n\tconst [user, setUser] = useState<User | null>(null)\n\tconst [repositories, setRepositories] = useState<Repository[]>([])\n\n\tuseEffect(() => {\n\t\tapi.get(`users/${params.user}`).then(response => {\n\t\t\tsetUser(response.data)\n\t\t})\n\t\tapi.get(`users/${params.user}/repos`).then(response => {\n\t\t\tsetRepositories(response.data)\n\t\t})\n\t}, [params.user])\n\n\treturn user && repositories ? (\n\t\t<>\n\t\t\t<RepositoryInfo>\n\t\t\t\t<header>\n\t\t\t\t\t<img src={user.avatar_url} alt={user.name} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t{user.name} <span> {user.login} </span>\n\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t<p>{user.location}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {user.followers} </strong>\n\t\t\t\t\t\t<span> followers </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {user.following} </strong>\n\t\t\t\t\t\t<span> following </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {user.public_repos} </strong>\n\t\t\t\t\t\t<span> public repos </span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</RepositoryInfo>\n\t\t\t<Issues>\n\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t<a\n\t\t\t\t\t\tkey={repository.id}\n\t\t\t\t\t\thref={repository.html_url}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</a>\n\t\t\t\t))}\n\t\t\t</Issues>\n\t\t</>\n\t) : (\n\t\t<Loader />\n\t)\n}\n\nexport default User\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Dashboard from './../pages/Dashboard'\nimport Repository from './../pages/Repository'\nimport User from './../pages/User'\n\nconst Routes: React.FC = () => (\n\t<Switch>\n\t\t<Route path=\"/\" exact component={Dashboard} />\n\t\t<Route path=\"/repositories/:repository+\" component={Repository} />\n\t\t<Route path=\"/users/:user\" component={User} />\n\t</Switch>\n)\n\nexport default Routes\n","import styled from 'styled-components'\n\nexport const Header = styled.header`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\ta {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttext-decoration: none;\n\t\tcolor: #a8a8b3;\n\t\ttransition: 0.2s color;\n\n\t\t&:hover {\n\t\t\tcolor: #666666;\n\t\t}\n\n\t\tsvg {\n\t\t\tmargin-right: 4px;\n\t\t}\n\t}\n`\n","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { FiChevronLeft } from 'react-icons/fi'\n\nimport logo from './../../assets/logo.svg'\n\nimport { Header } from './styles'\n\nconst HeaderComponent: React.FC = () => {\n\tconst { pathname } = useLocation()\n\treturn (\n\t\t<Header>\n\t\t\t<img src={logo} alt=\"GitHub Explorer\" />\n\t\t\t{pathname !== '/' && (\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<FiChevronLeft size={16} />\n\t\t\t\t\tVoltar\n\t\t\t\t</Link>\n\t\t\t)}\n\t\t</Header>\n\t)\n}\n\nexport default HeaderComponent\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport GlobalStyle from './styles/global'\n\nimport Routes from './routes'\n\nimport Header from './components/Header'\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<GlobalStyle />\n\t\t\t<BrowserRouter\n\t\t\t\tbasename={\n\t\t\t\t\tprocess.env.NODE_ENV === 'development' ? '/' : process.env.PUBLIC_URL\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Header />\n\t\t\t\t<Routes />\n\t\t\t</BrowserRouter>\n\t\t</>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/github_bg.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";"],"sourceRoot":""}