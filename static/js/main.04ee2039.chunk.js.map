{"version":3,"sources":["styles/global.ts","services/api-client.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","components/Loader/styles.ts","components/Loader/index.tsx","pages/Repository/index.tsx","routes/index.tsx","components/Header/styles.ts","components/Header/index.tsx","App.tsx","index.tsx","assets/github_bg.svg","assets/logo.svg"],"names":["createGlobalStyle","githubBg","api","axios","create","baseURL","Title","styled","h1","Form","form","hasError","css","shade","Repositories","div","Error","span","Dashboard","useState","newRepo","setNewRepo","inputError","setInputError","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","useEffect","setItem","stringify","onSubmit","value","placeholder","onChange","e","target","type","map","to","full_name","key","src","owner","avatar_url","alt","login","description","size","RepositoryInfo","section","Issues","LoaderContainer","Loader","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","options","height","width","Repository","params","useRouteMatch","setRepository","issues","setIssues","then","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","rel","title","user","Routes","path","exact","component","Header","header","HeaderComponent","pathname","useLocation","logo","App","basename","process","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.04ee2039.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nimport githubBg from './../assets/github_bg.svg'\n\nexport default createGlobalStyle`\n\t* {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\toutline: none;\n\t\tbox-sizing: border-box;\n\t}\n\n\tbody {\n\t\tbackground: #F0F0F5 url(${githubBg}) no-repeat 70% top;\n\t\t-webkit-font-smoothing: antialiased;\n\t}\n\n\tbody,\n\tinput,\n\tbutton {\n\t\tfont: 16px Roboto, sans-serif;\n\t}\n\n\t#root {\n\t\tmax-width: 960px;\n\t\tmargin: 0 auto;\n\t\tpadding: 40px 20px;\n\t}\n\n\tbutton {\n\t\tcursor: pointer;\n\t}\n`\n","import axios from 'axios'\n\nconst api = axios.create({\n\tbaseURL: 'https://api.github.com'\n})\n\nexport default api\n","import styled, { css } from 'styled-components'\nimport { shade } from 'polished'\n\ninterface FormProps {\n\thasError: boolean\n}\n\nexport const Title = styled.h1`\n\tmargin-top: 40px;\n\tfont-size: 36px;\n\tline-height: 44px;\n\tcolor: #3a3a3a;\n\tmax-width: 450px;\n\n\t@media (min-width: 1024px) {\n\t\tfont-size: 48px;\n\t\tline-height: 56px;\n\t\tmargin-top: 80px;\n\t}\n`\n\nexport const Form = styled.form<FormProps>`\n\tmargin-top: 40px;\n\tmax-width: 700px;\n\n\tdisplay: flex;\n\n\tinput {\n\t\tflex: 1;\n\t\theight: 50px;\n\t\tpadding: 0 16px;\n\t\tborder: 2px solid transparent;\n\t\tborder-right: 0;\n\t\tborder-radius: 5px 0 0 5px;\n\t\tcolor: #3a3a3a;\n\n\t\t${({ hasError }) =>\n\t\t\thasError &&\n\t\t\tcss`\n\t\t\t\tborder-color: #c53030;\n\t\t\t`}\n\n\t\t&::placeholder {\n\t\t\tcolor: #a8a8b3;\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\theight: 70px;\n\t\t\tpadding: 0 24px;\n\t\t}\n\t}\n\n\tbutton {\n\t\twidth: 210px;\n\t\tbackground: #04d361;\n\t\tborder: 0;\n\t\theight: 50px;\n\t\tcolor: #ffffff;\n\t\tfont-weight: bold;\n\t\tborder-radius: 0 5px 5px 0;\n\t\ttransition: 0.2s background-color;\n\t\t&:hover {\n\t\t\tbackground: ${shade(0.2, '#04d361')};\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\theight: 70px;\n\t\t}\n\t}\n`\nexport const Repositories = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\t/* Repository item */\n\ta {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t\tflex-direction: column;\n\t\ttext-decoration: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: 0.2s transform;\n\n\t\t& + a {\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\t\t&:hover {\n\t\t\ttransform: translateX(10px);\n\t\t}\n\n\t\timg {\n\t\t\twidth: 64px;\n\t\t\theight: 64px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-bottom: 16px;\n\t\t}\n\n\t\tdiv {\n\t\t\tmargin: 0 16px;\n\t\t\tflex: 1;\n\n\t\t\tstrong {\n\t\t\t\tfont-size: 20px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #a8a8b3;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\t\t}\n\n\t\tsvg {\n\t\t\tmargin: 16px 0 0 0;\n\t\t\tcolor: #cbcbd6;\n\t\t}\n\t}\n\n\t@media (min-width: 1024px) {\n\t\ta {\n\t\t\tflex-direction: row;\n\n\t\t\timg {\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\tsvg {\n\t\t\t\tmargin: 0 0 0 auto;\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const Error = styled.span`\n\tdisplay: block;\n\tcolor: #c53030;\n\tmargin-top: 8px;\n`\n","import React, { useEffect, useState, FormEvent } from 'react'\nimport { FiChevronRight } from 'react-icons/fi'\nimport { Link } from 'react-router-dom'\n\nimport api from './../../services/api-client'\n\nimport { Title, Form, Error, Repositories } from './styles'\n\ninterface Repository {\n\tfull_name: string\n\tdescription: string\n\towner: {\n\t\tlogin: string\n\t\tavatar_url: string\n\t}\n}\n\nconst Dashboard: React.FC = () => {\n\tconst [newRepo, setNewRepo] = useState('')\n\tconst [inputError, setInputError] = useState('')\n\tconst [repositories, setRepositories] = useState<Repository[]>(() => {\n\t\tconst storagedRepositories = localStorage.getItem(\n\t\t\t'@GitHubExplorer:repositories'\n\t\t)\n\t\tif (storagedRepositories) {\n\t\t\treturn JSON.parse(storagedRepositories)\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t})\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem(\n\t\t\t'@GitHubExplorer:repositories',\n\t\t\tJSON.stringify(repositories)\n\t\t)\n\t}, [repositories])\n\n\tasync function handleAddRepository(\n\t\tevent: FormEvent<HTMLFormElement>\n\t): Promise<void> {\n\t\tevent.preventDefault()\n\n\t\tif (!newRepo) {\n\t\t\tsetInputError(\n\t\t\t\t'Enter the repository name in the following format: author/name '\n\t\t\t)\n\t\t\treturn\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await api.get<Repository>(`repos/${newRepo}`)\n\t\t\tconst repository = response.data\n\n\t\t\tsetRepositories([...repositories, repository])\n\t\t\tsetNewRepo('')\n\t\t\tsetInputError('')\n\t\t} catch (error) {\n\t\t\tsetInputError(`Error while searching for: ${newRepo}`)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Title> Explore repositories on GitHub </Title>\n\n\t\t\t<Form hasError={!!inputError} onSubmit={handleAddRepository}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={newRepo}\n\t\t\t\t\tplaceholder=\"Search for repository name...\"\n\t\t\t\t\tonChange={e => setNewRepo(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\"> Search </button>\n\t\t\t</Form>\n\n\t\t\t{inputError && <Error> {inputError} </Error>}\n\n\t\t\t<Repositories>\n\t\t\t\t{repositories.map(repository => (\n\t\t\t\t\t<Link\n\t\t\t\t\t\tto={`/repositories/${repository.full_name}`}\n\t\t\t\t\t\tkey={repository.full_name}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\t\talt={repository.owner.login}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</Link>\n\t\t\t\t))}\n\t\t\t</Repositories>\n\t\t</>\n\t)\n}\n\nexport default Dashboard\n","import styled from 'styled-components'\n\nexport const RepositoryInfo = styled.section`\n\tmargin-top: 80px;\n\n\theader {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tflex-direction: column;\n\n\t\timg {\n\t\t\twidth: 80px;\n\t\t\theight: 80px;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin-bottom: 16px;\n\t\t}\n\n\t\tdiv {\n\t\t\tflex: 1;\n\t\t\tstrong {\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t\tcolor: #737380;\n\t\t\t\tmargin-top: 4px;\n\t\t\t}\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tflex-direction: row;\n\n\t\t\timg {\n\t\t\t\twidth: 120px;\n\t\t\t\theight: 120px;\n\t\t\t\tmargin-bottom: 0;\n\t\t\t}\n\n\t\t\tdiv {\n\t\t\t\tmargin-left: 24px;\n\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\n\t\t\t\tp {\n\t\t\t\t\tfont-size: 28px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tul {\n\t\tdisplay: flex;\n\t\tlist-style: none;\n\t\tmargin-top: 40px;\n\n\t\tli {\n\t\t\t& + li {\n\t\t\t\tmargin-left: 26px;\n\t\t\t}\n\t\t\tstrong {\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 26px;\n\t\t\t\tcolor: #3d3d4d;\n\t\t\t}\n\n\t\t\tspan {\n\t\t\t\tdisplay: block;\n\t\t\t\tmargin-top: 4px;\n\t\t\t\tcolor: #6c6c80;\n\t\t\t}\n\t\t}\n\t\t@media (min-width: 1024px) {\n\t\t\tli {\n\t\t\t\t& + li {\n\t\t\t\t\tmargin-left: 80px;\n\t\t\t\t}\n\t\t\t\tstrong {\n\t\t\t\t\tfont-size: 36px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport const Issues = styled.div`\n\tmargin-top: 80px;\n\tmax-width: 700px;\n\n\t/* Repository item */\n\ta {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 5px;\n\t\twidth: 100%;\n\t\tpadding: 16px;\n\t\tdisplay: block;\n\t\ttext-decoration: none;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttransition: 0.2s transform;\n\n\t\t& + a {\n\t\t\tmargin-top: 16px;\n\t\t}\n\n\t\t&:hover {\n\t\t\ttransform: translateX(10px);\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tpadding: 24px;\n\t\t}\n\t}\n\n\tdiv {\n\t\tmargin: 0 8px;\n\t\tflex: 1;\n\n\t\tstrong {\n\t\t\tfont-size: 18px;\n\t\t\tcolor: #3d3d4d;\n\t\t}\n\n\t\tp {\n\t\t\tfont-size: 16px;\n\t\t\tcolor: #a8a8b3;\n\t\t\tmargin-top: 4px;\n\t\t}\n\n\t\t@media (min-width: 1024px) {\n\t\t\tmargin: 0 16px;\n\n\t\t\tstrong {\n\t\t\t\tfont-size: 20px;\n\t\t\t}\n\n\t\t\tp {\n\t\t\t\tfont-size: 18px;\n\t\t\t}\n\t\t}\n\t}\n\n\tsvg {\n\t\tmargin-left: auto;\n\t\tcolor: #cbcbd6;\n\t}\n`\n","import styled from 'styled-components'\n\nexport const LoaderContainer = styled.div`\n\tposition: fixed;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tbackground: rgba(255, 255, 255, 0.2);\n`\n","import React from 'react'\nimport Lottie from 'react-lottie'\n\nimport { LoaderContainer } from './styles'\n\nimport animationData from './loaderLottie.json'\n\nconst Loader: React.FC = () => {\n\tconst defaultOptions = {\n\t\tloop: true,\n\t\tautoplay: true,\n\t\tanimationData: animationData,\n\t\trendererSettings: {\n\t\t\tpreserveAspectRatio: 'xMidYMid slice'\n\t\t}\n\t}\n\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<Lottie options={defaultOptions} height={200} width={200} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n","import React, { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router-dom'\nimport { FiChevronRight } from 'react-icons/fi'\n\nimport api from './../../services/api-client'\n\nimport { RepositoryInfo, Issues } from './styles'\n\nimport Loader from './../../components/Loader'\n\ninterface RepositoryParams {\n\trepository: string\n}\n\ninterface Repository {\n\tfull_name: string\n\tdescription: string\n\tstargazers_count: number\n\tforks_count: number\n\topen_issues_count: number\n\towner: {\n\t\tlogin: string\n\t\tavatar_url: string\n\t}\n}\n\ninterface Issue {\n\tid: number\n\ttitle: string\n\thtml_url: string\n\tuser: {\n\t\tlogin: string\n\t}\n}\n\nconst Repository: React.FC = () => {\n\tconst { params } = useRouteMatch<RepositoryParams>()\n\n\tconst [repository, setRepository] = useState<Repository | null>(null)\n\tconst [issues, setIssues] = useState<Issue[]>([])\n\n\tuseEffect(() => {\n\t\tapi.get(`repos/${params.repository}`).then(response => {\n\t\t\tsetRepository(response.data)\n\t\t})\n\t\tapi.get(`repos/${params.repository}/issues`).then(response => {\n\t\t\tsetIssues(response.data)\n\t\t})\n\t}, [params.repository])\n\n\treturn repository && issues ? (\n\t\t<>\n\t\t\t<RepositoryInfo>\n\t\t\t\t<header>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={repository.owner.avatar_url}\n\t\t\t\t\t\talt={repository.owner.avatar_url}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<strong> {repository.full_name} </strong>\n\t\t\t\t\t\t<p> {repository.description} </p>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.stargazers_count} </strong>\n\t\t\t\t\t\t<span> stars </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.forks_count} </strong>\n\t\t\t\t\t\t<span> forks </span>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong> {repository.open_issues_count} </strong>\n\t\t\t\t\t\t<span> open issues </span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</RepositoryInfo>\n\t\t\t<Issues>\n\t\t\t\t{issues.map(issue => (\n\t\t\t\t\t<a\n\t\t\t\t\t\tkey={issue.id}\n\t\t\t\t\t\thref={issue.html_url}\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<strong> {issue.title} </strong>\n\t\t\t\t\t\t\t<p> {issue.user.login} </p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<FiChevronRight size={20} />\n\t\t\t\t\t</a>\n\t\t\t\t))}\n\t\t\t</Issues>\n\t\t</>\n\t) : (\n\t\t<Loader />\n\t)\n}\n\nexport default Repository\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\n\nimport Dashboard from './../pages/Dashboard'\nimport Repository from './../pages/Repository'\n\nconst Routes: React.FC = () => (\n\t<Switch>\n\t\t<Route path=\"/\" exact component={Dashboard} />\n\t\t<Route path=\"/repositories/:repository+\" component={Repository} />\n\t</Switch>\n)\n\nexport default Routes\n","import styled from 'styled-components'\n\nexport const Header = styled.header`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\n\ta {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\ttext-decoration: none;\n\t\tcolor: #a8a8b3;\n\t\ttransition: 0.2s color;\n\n\t\t&:hover {\n\t\t\tcolor: #666666;\n\t\t}\n\n\t\tsvg {\n\t\t\tmargin-right: 4px;\n\t\t}\n\t}\n`\n","import React from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport { FiChevronLeft } from 'react-icons/fi'\n\nimport logo from './../../assets/logo.svg'\n\nimport { Header } from './styles'\n\nconst HeaderComponent: React.FC = () => {\n\tconst { pathname } = useLocation()\n\treturn (\n\t\t<Header>\n\t\t\t<img src={logo} alt=\"GitHub Explorer\" />\n\t\t\t{pathname !== '/' && (\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<FiChevronLeft size={16} />\n\t\t\t\t\tVoltar\n\t\t\t\t</Link>\n\t\t\t)}\n\t\t</Header>\n\t)\n}\n\nexport default HeaderComponent\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport GlobalStyle from './styles/global'\n\nimport Routes from './routes'\n\nimport Header from './components/Header'\n\nconst App: React.FC = () => (\n\t<>\n\t\t<GlobalStyle />\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL}>\n\t\t\t<Header />\n\t\t\t<Routes />\n\t\t</BrowserRouter>\n\t</>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/github_bg.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";"],"sourceRoot":""}